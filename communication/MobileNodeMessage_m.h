//
// Generated file, do not edit! Created by nedtool 5.6 from communication/MobileNodeMessage.msg.
//

#ifndef __INET_MOBILENODEMESSAGE_M_H
#define __INET_MOBILENODEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class MobileNodeMessage;
} // namespace inet

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Enum generated from <tt>communication/MobileNodeMessage.msg:22</tt> by nedtool.
 * <pre>
 * enum MessageType
 * {
 *     HEARTBEAT = 0;
 *     PAIR_REQUEST = 1;
 *     PAIR_CONFIRM = 2;
 * }
 * </pre>
 */
enum MessageType {
    HEARTBEAT = 0,
    PAIR_REQUEST = 1,
    PAIR_CONFIRM = 2
};

/**
 * Class generated from <tt>communication/MobileNodeMessage.msg:29</tt> by nedtool.
 * <pre>
 * class MobileNodeMessage extends FieldsChunk
 * {
 *     chunkLength = B(9);
 *     int sourceID = -1;
 *     int destinationID = -1;
 *     MessageType messageType = HEARTBEAT;
 * }
 * </pre>
 */
class MobileNodeMessage : public ::inet::FieldsChunk
{
  protected:
    int sourceID = -1;
    int destinationID = -1;
    inet::MessageType messageType = HEARTBEAT;

  private:
    void copy(const MobileNodeMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MobileNodeMessage&);

  public:
    MobileNodeMessage();
    MobileNodeMessage(const MobileNodeMessage& other);
    virtual ~MobileNodeMessage();
    MobileNodeMessage& operator=(const MobileNodeMessage& other);
    virtual MobileNodeMessage *dup() const override {return new MobileNodeMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSourceID() const;
    virtual void setSourceID(int sourceID);
    virtual int getDestinationID() const;
    virtual void setDestinationID(int destinationID);
    virtual inet::MessageType getMessageType() const;
    virtual void setMessageType(inet::MessageType messageType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MobileNodeMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MobileNodeMessage& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_MOBILENODEMESSAGE_M_H


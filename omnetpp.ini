[General]
description = "multiple UAVs hovering"

# Visualizer settings
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "map.earth"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 10000m
**.sceneMinX = -10000m
**.sceneMinY = -10000m
**.sceneMinZ = -10000m
**.sceneMaxX = 10000m
**.sceneMaxY = 10000m
**.sceneMaxZ = 10000m


**.wlan[0].radio.displayCommunicationRange = true
#*.visualizer.*.physicalLinkVisualizer.displayLinks = true
#*.visualizer.*.dataLinkVisualizer.displayLinks = true
#*.visualizer.*.networkRouteVisualizer.displayRoutes = true
#*.visualizer.*.*LinkVisualizer.lineShift = 0
#*.visualizer.*.networkRouteVisualizer.lineShift = 0

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = true

# enable drone load visualization
*.visualizer.*.statisticVisualizer.signalName = "dataLoad"
*.visualizer.*.statisticVisualizer.format = "(%v)"
*.visualizer.*.statisticVisualizer.textColor = "red"
*.visualizer.*.statisticVisualizer.font = "Courier New, 12px, bold"
*.visualizer.*.statisticVisualizer.opacity = 1
*.visualizer.*.statisticVisualizer.sourceFilter = "*.quads[*].** *.groundStation.**"

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 10


# mobility constraint area
**.constraintAreaMinX = -10000m
**.constraintAreaMinY = -10000m
**.constraintAreaMinZ = -10000m
**.constraintAreaMaxX = 10000m
**.constraintAreaMaxY = 10000m
**.constraintAreaMaxZ = 10000m


# Coordinates of the scene origin on the map
#Exe
*.coordinateSystem.sceneLongitude = -3.5268867993541564deg 
*.coordinateSystem.sceneLatitude = 50.725870778828494deg 

#environment
*.environment.ground.typename = "FlatGround"
*.quads[*].osgModel = "3d/drone.ive.10.scale.0,0,90.rot"
**.mobility.initFromDisplayString = false


*.sensor*.wlan[0].radio.energyConsumer.typename = "SensorStateBasedEpEnergyConsumer"
*.sensor*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.sensor*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.sensor*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
*.sensor*.energyStorage.typename = "IdealEpEnergyStorage"

*.sensor*.wlan[0].radio.displayInterferenceRange = false

[Config Background]
network = projeto.mobilityDrones
description = "Config for wifi only communication"

# Quad networking:
*.quads[*].numApps = 1
*.quads[*].app[0].typename = "UdpMobileNodeCommunicationApp"
*.quads[*].app[0].localPort = 1000
*.quads[*].app[0].destPort = 1000
*.quads[*].app[0].sendInterval = 1s
*.quads[*].app[0].startTime =1s
*.quads[*].app[0].stopTime = -1s
*.quads[*].app[0].messageLength = 1454Byte
*.quads[*].protocol.typename = "DadcaProtocol"
*.quads[*].mobility.typename = "DroneMobility"
*.quads[*].mobility.coordinateSystemModule = "coordinateSystem" # Empty if the drone should follow Euclidean coordinates or "coordinateSystem" if it should follow coordinates
*.quads[*].mobility.waypointFile = "paths/voo_ar.waypoints"
*.quads[*].mobility.waypointProximity = 1m
*.quads[*].mobility.speed = 10mps
*.quads[*].mobility.homeLatitude = 50.72587077deg
*.quads[*].mobility.homeLongitude = -3.5268867deg

# Ground station configs
*.groundStation.mobility.typename = "StationaryMobility"
*.groundStation.mobility.coordinateSystemModule = "coordinateSystem"
*.groundStation.numApps = 1
*.groundStation.app[0].typename = "UdpMobileNodeCommunicationApp"
*.groundStation.app[0].destPort = 1000
*.groundStation.app[0].localPort = 1000
*.groundStation.app[0].sendInterval = 1s
*.groundStation.app[0].messageLength = 1454Byte

*.groundStation.protocol.typename = "DadcaProtocol"
*.groundStation.mobility.initialLatitude = 50.72577077deg
*.groundStation.mobility.initialLongitude = -3.5268867deg
*.groundStation.mobility.initialAltitude = 0m
*.groundStation.app[0].startTime = 130s

# General sensor and ground station configurations
*.numSensors = 3
*.sensors[*].numApps = 1
*.sensors[*].mobility.typename = "StationaryMobility"  
*.sensors[*].mobility.coordinateSystemModule = "coordinateSystem"
*.sensors[*].app[0].typename = "UdpSensorCommunicationApp"
*.sensors[0..2].protocol.typename = "DadcaProtocolSensor"
*.sensors[*].app[0].destPort = 1000
*.sensors[*].app[0].localPort = 1000
*.sensors[*].app[0].sendInterval = 8s
*.sensors[*].app[0].startTime = exponential(1s)
*.sensors[*].app[0].messageLength = 1454Byte
*.sensors[*].mobility.initialAltitude = 0m
*.sensors[0].mobility.initialLatitude = 50.72577077deg
*.sensors[0].mobility.initialLongitude = -3.5267867deg
*.sensors[1].mobility.initialLatitude = 50.72567077deg
*.sensors[1].mobility.initialLongitude = -3.5269867deg
*.sensors[2].mobility.initialLatitude = 50.72597077deg
*.sensors[2].mobility.initialLongitude = -3.5269867deg

#*.sensors[3].mobility.initialLatitude = -15.8436264deg
#*.sensors[3].mobility.initialLongitude = -47.9270250deg
#*.sensors[4].mobility.initialLatitude = -15.8406461deg
#*.sensors[4].mobility.initialLongitude = -47.9240263deg
#*.sensors[5].mobility.initialLatitude = -15.8416370deg
#*.sensors[5].mobility.initialLongitude = -47.9227066deg
#*.sensors[6].mobility.initialLatitude = -15.8437115deg
#*.sensors[6].mobility.initialLongitude = -47.9259145deg
#*.sensors[7].mobility.initialLatitude = -15.8437425deg
#*.sensors[7].mobility.initialLongitude = -47.9246378deg



